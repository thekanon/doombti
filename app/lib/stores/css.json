[
  {
    "category": "HTML/CSS (Sass, Less)",
    "question": "HTML과 CSS에서 '클래스(class)'와 '아이디(id)'의 차이점은 무엇입니까?",
    "options": [
      "클래스(class)는 여러 요소에 적용할 수 있으며, 동일한 클래스를 여러 요소에 사용할 수 있습니다. 아이디(id)는 유일해야 하며 한 페이지에서 한 번만 사용해야 합니다.",
      "클래스(class)는 유일해야 하며 한 페이지에서 한 번만 사용해야 합니다. 아이디(id)는 여러 요소에 적용할 수 있으며, 동일한 아이디를 여러 요소에 사용할 수 있습니다.",
      "클래스(class)는 스타일을 적용하기 위한 속성을 정의하는 데 사용하고, 아이디(id)는 요소의 위치를 지정하는 데 사용됩니다.",
      "클래스(class)와 아이디(id) 모두 동일한 용도로 사용할 수 있으며, 차이점은 없습니다."
    ],
    "correct_answer": 0,
    "answer_description": "HTML과 CSS에서 '클래스(class)'는 여러 요소에 적용할 수 있으며, 동일한 클래스를 여러 요소에 사용할 수 있습니다. 반면 '아이디(id)'는 유일해야 하며 한 페이지에서 한 번만 사용해야 합니다. 이로 인해 아이디는 주로 페이지 내에서 고유한 요소를 가리키는 데 사용되며, 클래스는 여러 요소를 그룹화하고 스타일을 적용하는 데 사용됩니다."
  },
  {
    "category": "HTML/CSS (Sass, Less)",
    "question": "HTML에서 'div' 요소는 어떤 역할을 하며, CSS를 사용하여 'div' 요소에 스타일을 적용하는 방법은 무엇인가요?",
    "options": [
      "'div' 요소는 블록 레벨 요소로, 웹 페이지의 구조를 나타내며 다른 요소들을 그룹화할 때 주로 사용됩니다. 'div' 요소에 CSS 스타일을 적용하려면 'class'나 'id' 속성을 사용하여 선택자를 정의하고 해당 선택자에 스타일을 적용합니다.",
      "'div' 요소는 인라인 요소로, 텍스트를 감싸는 역할을 합니다. 'div' 요소에 CSS 스타일을 적용하려면 'style' 속성을 사용하여 직접 스타일 속성을 정의합니다.",
      "'div' 요소는 특별한 역할을 하지 않으며, 그 자체로 아무런 시각적 효과를 가지지 않습니다. 'div' 요소에 스타일을 적용하기 위해서는 별도의 선택자를 사용하지 않고, 'div' 요소에 직접 스타일 속성을 정의합니다.",
      "'div' 요소는 텍스트 요소를 표현하는 역할을 하며, 스타일을 적용하기 위해서는 'text-style' 속성을 사용합니다."
    ],
    "correct_answer": 0,
    "answer_description": "HTML에서 'div' 요소는 웹 페이지의 구조를 나타내며 다른 요소들을 그룹화할 때 주로 사용됩니다. 'div' 요소에 CSS 스타일을 적용하려면 'class'나 'id' 속성을 사용하여 선택자를 정의하고 해당 선택자에 스타일을 적용합니다. 이를 통해 'div' 요소에 원하는 디자인을 적용할 수 있습니다."
  },
  {
    "category": "HTML/CSS (Sass, Less)",
    "question": "CSS의 'float' 속성은 어떤 역할을 하며, 어떤 상황에서 사용되나요?",
    "options": [
      "'float' 속성은 요소를 좌측 또는 우측으로 부유시키는 데 사용됩니다. 이를 통해 텍스트 및 다른 요소가 주위로 감싸게 할 수 있으며, 예를 들어 이미지를 텍스트 주위로 정렬할 때 사용됩니다.",
      "'float' 속성은 요소의 투명도를 조절하는 데 사용됩니다. 이를 통해 요소를 투명하게 만들거나 반투명하게 만들 수 있으며, 시각적 효과를 줄 때 사용됩니다.",
      "'float' 속성은 요소의 크기를 조절하는 데 사용됩니다. 이를 통해 요소의 너비와 높이를 설정하거나 조절할 수 있으며, 레이아웃을 제어할 때 사용됩니다.",
      "'float' 속성은 요소의 위치를 중앙 정렬하는 데 사용됩니다. 이를 통해 요소를 가로 또는 세로 중앙에 배치할 수 있으며, 웹 페이지의 가운데 정렬에 사용됩니다."
    ],
    "correct_answer": 0,
    "answer_description": "'float' 속성은 요소를 좌측 또는 우측으로 부유시키는 데 사용됩니다. 이를 통해 텍스트 및 다른 요소가 주위로 감싸게 할 수 있으며, 주로 이미지를 텍스트 주위로 정렬하거나 레이아웃을 제어할 때 사용됩니다."
  },
  {
    "category": "HTML/CSS (Sass, Less)",
    "question": "HTML에서 'inline' 요소와 'block' 요소의 차이는 무엇이며, 언제 각각을 사용해야 하나요?",
    "options": [
      "'inline' 요소는 한 줄에 나란히 표시되며 컨텐츠의 일부만 차지하며, 'block' 요소는 새로운 줄에서 시작되며 가로 폭 전체를 차지합니다. 'inline' 요소는 텍스트 내에서 사용하며, 'block' 요소는 구조적인 레이아웃을 만들 때 사용합니다.",
      "'inline' 요소는 컨텐츠를 수직으로 쌓으며, 'block' 요소는 컨텐츠를 가로로 배열합니다. 'inline' 요소는 주로 페이지의 가로 정렬에 사용하며, 'block' 요소는 세로 정렬에 사용합니다.",
      "'inline' 요소와 'block' 요소는 완전히 동일한 역할을 하며, 언제나 상황에 따라 사용자의 기호에 따라 선택할 수 있습니다.",
      "'inline' 요소는 텍스트 컨텐츠에만 사용할 수 있으며, 'block' 요소는 이미지 및 미디어 컨텐츠에만 사용할 수 있습니다."
    ],
    "correct_answer": 0,
    "answer_description": "HTML에서 'inline' 요소와 'block' 요소의 주요 차이점은 표시되는 방식입니다. 'inline' 요소는 한 줄에 나란히 표시되며 컨텐츠의 일부만 차지하며, 'block' 요소는 새로운 줄에서 시작되며 가로 폭 전체를 차지합니다. 'inline' 요소는 텍스트 내에서 사용하고 텍스트의 일부로 간주됩니다. 반면 'block' 요소는 구조적인 레이아웃을 만들 때 사용하며, 새로운 블록을 시작하고 여러 요소를 수직으로 쌓을 때 유용합니다."
  },
  {
    "category": "HTML/CSS (Sass, Less)",
    "question": "HTML에서 'box model'은 무엇이며, 어떤 구성 요소로 이루어져 있으며, 각 구성 요소가 무엇을 의미하나요?",
    "options": [
      "'box model'은 HTML 요소의 시각적 모양을 정의하는 모델로, 'content', 'padding', 'border', 'margin'으로 구성됩니다. 'content'는 내용 영역을 나타내며, 'padding'은 내용과 테두리 사이의 여백을 나타내고, 'border'는 테두리를 나타내며, 'margin'은 요소 주위의 공간을 나타냅니다.",
      "'box model'은 HTML 요소의 위치를 결정하는 모델로, 'top', 'right', 'bottom', 'left'으로 구성됩니다. 'top'은 요소의 상단 위치를 나타내며, 'right'은 오른쪽 위치를 나타내고, 'bottom'은 하단 위치를 나타내며, 'left'은 왼쪽 위치를 나타냅니다.",
      "'box model'은 HTML 요소의 색상을 정의하는 모델로, 'red', 'green', 'blue', 'alpha'로 구성됩니다. 'red'는 빨간색 성분을 나타내며, 'green'은 초록색 성분을 나타내고, 'blue'는 파란색 성분을 나타내며, 'alpha'는 투명도를 나타냅니다.",
      "'box model'은 HTML 요소의 레이아웃을 정의하는 모델로, 'header', 'footer', 'sidebar', 'content'로 구성됩니다. 'header'는 페이지 상단의 헤더 영역을 나타내며, 'footer'는 페이지 하단의 푸터 영역을 나타내고, 'sidebar'는 사이드바를 나타내며, 'content'는 주요 컨텐츠를 나타냅니다."
    ],
    "correct_answer": 0,
    "answer_description": "'box model'은 HTML 요소의 시각적 모양을 정의하는 모델로, 'content', 'padding', 'border', 'margin'으로 구성됩니다. 'content'는 내용 영역을 나타내며 요소의 실제 내용이 표시되는 곳입니다. 'padding'은 내용과 테두리 사이의 여백을 나타내며 내용과 테두리 사이의 간격을 조절합니다. 'border'는 요소의 테두리를 나타내며 내용 주위에 그려지는 테두리를 정의합니다. 'margin'은 요소 주위의 공간을 나타내며 요소와 다른 요소 간의 간격을 조절합니다."
  },
  {
    "category": "HTML/CSS (Sass, Less)",
    "question": "CSS의 'position' 속성에는 어떤 값들이 있으며, 각각의 값은 어떤 역할을 하는지 설명해주세요.",
    "options": [
      "'static', 'relative', 'absolute', 'fixed'이 있으며, 'static'은 요소를 일반적인 문서 흐름에 따라 배치하고, 'relative'는 요소를 자신의 원래 위치를 기준으로 배치하며, 'absolute'는 요소를 가장 가까운 부모 요소를 기준으로 배치하고, 'fixed'는 뷰포트를 기준으로 요소를 고정 위치에 배치합니다.",
      "'float', 'clear', 'display', 'position'이 있으며, 'float'는 요소를 좌우로 부유시키는 데 사용되고, 'clear'는 부유 요소 주변의 요소들과의 관계를 설정하며, 'display'는 요소의 표시 방법을 설정하고, 'position'은 요소의 위치를 조절합니다.",
      "'flex', 'grid', 'inline-block', 'block'이 있으며, 'flex'는 플렉스 박스 레이아웃을 설정하고, 'grid'는 그리드 레이아웃을 설정하며, 'inline-block'은 인라인 박스와 같이 표시되지만 블록 요소처럼 배치되고, 'block'은 블록 레벨 요소를 설정합니다.",
      "'margin', 'padding', 'border', 'outline'가 있으며, 각각은 요소의 여백, 안쪽 여백, 테두리, 외곽선을 설정하는 데 사용됩니다."
    ],
    "correct_answer": 0,
    "answer_description": "CSS의 'position' 속성은 'static', 'relative', 'absolute', 'fixed' 값들을 가집니다. 'static'은 요소를 일반적인 문서 흐름에 따라 배치하며, 'relative'는 요소를 자신의 원래 위치를 기준으로 배치합니다. 'absolute'는 요소를 가장 가까운 부모 요소를 기준으로 배치하며, 'fixed'는 뷰포트를 기준으로 요소를 고정 위치에 배치합니다. 이러한 'position' 값들을 사용하여 웹 페이지의 레이아웃을 조절하고 요소의 위치를 제어할 수 있습니다."
  },
  {
    "category": "HTML/CSS (Sass, Less)",
    "question": "Sass와 Less는 어떤 종류의 웹 개발 도구이며, 어떻게 기존 CSS와 다른가요?",
    "options": [
      "Sass와 Less는 웹 개발에 사용되는 JavaScript 라이브러리로, 웹 페이지의 상호작용을 개선합니다.",
      "Sass와 Less는 CSS 전처리기로, 기존 CSS를 확장하고 보완하는 도구입니다. 변수, 중첩, 및 함수와 같은 추가 기능을 제공하며 코드의 재사용성과 유지 보수성을 향상시킵니다.",
      "Sass와 Less는 브라우저의 렌더링 엔진을 개선하는 웹 퍼포먼스 도구로, 웹 페이지의 성능을 향상시킵니다.",
      "Sass와 Less는 웹 애플리케이션의 보안을 강화하는 보안 도구로, 데이터 유출과 사이트 공격을 방지합니다."
    ],
    "correct_answer": 1,
    "answer_description": "Sass와 Less는 CSS 전처리기로, 기존 CSS를 확장하고 보완하는 도구입니다. 이들은 변수, 중첩, 및 함수와 같은 추가 기능을 제공하며, 코드의 재사용성과 유지 보수성을 향상시킵니다. 이러한 전처리기는 CSS 코드 작성을 더 효율적으로 만들고, 스타일시트를 더 구조화된 형태로 관리할 수 있도록 도와줍니다."
  },
  {
    "category": "HTML/CSS (Sass, Less)",
    "question": "Sass와 Less에서 변수(Variables)는 어떤 역할을 하며, 어떻게 사용되나요?",
    "options": [
      "Sass와 Less의 변수는 숫자 및 문자열 값을 저장하는 데 사용되며, 주로 웹 페이지의 텍스트 내용에 적용됩니다.",
      "Sass와 Less의 변수는 CSS 속성값을 저장하는 데 사용되며, 스타일시트 내에서 재사용 가능한 값을 정의하고 유지 보수성을 향상시킵니다.",
      "Sass와 Less의 변수는 웹 페이지의 레이아웃을 조정하는 데 사용되며, 주로 그리드 시스템을 설정하는 데 쓰입니다.",
      "Sass와 Less의 변수는 JavaScript 코드와 상호작용하기 위한 플래그로 사용되며, 이벤트 처리와 관련이 있습니다."
    ],
    "correct_answer": 1,
    "answer_description": "Sass와 Less에서 변수(Variables)는 CSS 속성값을 저장하는 데 사용됩니다. 이들 변수를 사용하여 스타일시트 내에서 재사용 가능한 값을 정의하고 유지 보수성을 향상시킵니다. 이로써 스타일 값을 한 번만 정의하고, 여러 곳에서 사용할 수 있으며 변경 시에도 한 곳에서 수정할 수 있어 코드의 일관성을 유지할 수 있습니다."
  },
  {
    "category": "HTML/CSS (Sass, Less)",
    "question": "Sass와 Less에서 '중첩(Nesting)'은 어떤 개념이며, 어떻게 사용되나요?",
    "options": [
      "'중첩'은 HTML 요소들을 서로 중첩하여 레이아웃을 구성하는 것을 의미하며, Sass와 Less에서는 이러한 HTML 요소 중첩을 표현하기 위해 사용됩니다.",
      "'중첩'은 스타일 규칙을 더 효율적으로 작성하기 위해 사용되는 개념으로, 부모 요소와 자식 요소 사이의 스타일 관계를 표현합니다. 이를 통해 더 간결하고 가독성이 좋은 스타일시트를 작성할 수 있습니다.",
      "'중첩'은 코드의 중복을 제거하기 위한 프로그래밍 기법으로, 변수와 함께 사용되며, 스타일시트의 유지 보수성을 향상시킵니다.",
      "'중첩'은 스타일을 순차적으로 나열하는 방법으로, 기존 CSS와 거의 유사한 개념입니다."
    ],
    "correct_answer": 1,
    "answer_description": "Sass와 Less에서 '중첩(Nesting)'은 스타일 규칙을 더 효율적으로 작성하기 위한 개념으로, 부모 요소와 자식 요소 사이의 스타일 관계를 표현합니다. 이를 통해 더 간결하고 가독성이 좋은 스타일시트를 작성할 수 있습니다. 중첩을 사용하면 스타일 규칙을 중첩 구조로 표현할 수 있어서 코드의 가독성을 높이고 유지 보수성을 향상시킬 수 있습니다."
  },
  {
    "category": "HTML/CSS (Sass, Less)",
    "question": "Sass와 Less에서 '믹스인(Mixin)'은 무엇이며, 어떻게 사용되나요?",
    "options": [
      "'믹스인'은 웹 페이지에서 이미지와 텍스트를 혼합하는 기술로, 그래픽 디자인에서 주로 사용됩니다.",
      "'믹스인'은 Sass와 Less에서 재사용 가능한 스타일 선언을 정의하는 데 사용되며, '@include' 지시어를 사용하여 스타일 규칙을 가져올 때 사용합니다.",
      "'믹스인'은 웹 페이지에서 다양한 요소 간의 상호작용을 처리하기 위한 JavaScript 코드를 나타냅니다.",
      "'믹스인'은 CSS 속성을 무시하고 기본 HTML 요소 스타일을 사용하도록 지정하는 데 사용됩니다."
    ],
    "correct_answer": 1,
    "answer_description": "Sass와 Less에서 '믹스인(Mixin)'은 재사용 가능한 스타일 선언을 정의하는 데 사용됩니다. 이를 통해 일반적인 스타일 패턴을 한 번 정의하고, 여러 요소에서 재사용할 수 있습니다. '@include' 지시어를 사용하여 스타일 규칙을 가져와서 원하는 요소에 적용합니다. 믹스인을 사용하면 코드 중복을 줄이고 유지 보수성을 향상시킬 수 있습니다."
  }
]
